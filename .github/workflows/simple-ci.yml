# Name for your workflow
name: Build and Push Docker Images to Google Artifact Registry

# Run on push to the main branch
on:
  push:
    branches: [ main ]

# Environment variables available to all jobs
env:
  # Pull the project ID from your GitHub secrets
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

  # The region of Artifact Registry repository
  GAR_LOCATION: australia-southeast1 # <-- IMPORTANT: Change this if your repo is in a different region!

  # repository in Artifact Registry
  GAR_REPOSITORY: portfolio-docker-repo 

  # The names for your final Docker images
  FRONTEND_IMAGE_NAME: frontend-portfolio
  BACKEND_IMAGE_NAME: backend-portfolio

jobs:
  build-and-push-to-gcp:
    name: Build and Push Images
    runs-on: ubuntu-latest

    # This is CRITICAL for Workload Identity Federation
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Get code from repository
        uses: actions/checkout@v4

      # Step 1: Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          # Use the secrets you created in your GitHub repository
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Step 2: Configure Docker to use gcloud credentials
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      # Step 3: Build and push the Frontend Docker image
      - name: Build and Push Frontend Image
        run: |
          # Build the image, tagging it with the full registry path and the unique commit SHA
          docker build -f ./frontend/Dockerfile -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }} ./frontend
          
          # Push the newly built image to Artifact Registry
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }}

      # Step 4: Build and push the Backend Docker image
      - name: Build and Push Backend Image
        run: |
          # Build the image, tagging it with the full registry path and the unique commit SHA
          docker build -f ./backend/Dockerfile -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }} ./backend
          
          # Push the newly built image to Artifact Registry
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}