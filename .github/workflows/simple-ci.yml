# Simple CI with Google Cloud Artifact Registry
name: Build and Push Portfolio to Google Cloud

# Run on push to main branch and pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Environment variables
env:
  NODE_VERSION: '22.3.0'
  # Google Cloud configuration
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: australia-southeast1
  GAR_REPOSITORY: portfolio-docker-repo
  IMAGE_NAME: portfolio

jobs:
  # Job 1: Test and Build (runs on all pushes and PRs)
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    # Get your code
    - name: Get code from repository
      uses: actions/checkout@v4
    
    # Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    # Install dependencies
    - name: Install packages
      run: npm ci
    
    # Run tests
    - name: Run tests
      run: npm test -- --watchAll=false --passWithNoTests
      env:
        CI: true
    
    # Build the React app
    - name: Build React app
      run: npm run build
    
    # Test Docker build locally
    - name: Test Docker build
      run: |
        docker build -t portfolio-test .
        echo "✅ Docker build successful!"

  # Job 2: Push to Google Cloud (only on main branch pushes)
  push-to-gcp:
    name: Push to Google Cloud
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Required for Workload Identity Federation
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Get code from repository
      uses: actions/checkout@v4
    
    # Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
    
    # Configure Docker for Artifact Registry
    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
    
    # Build and push Docker image
    - name: Build and Push Portfolio Image
      run: |
        # Build the image from root directory (where your Dockerfile is)
        docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        
        # Also tag with 'latest' for easy deployment
        docker tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
        
        # Push both tags to Artifact Registry
        docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
        
        echo "✅ Successfully pushed portfolio image to Google Artifact Registry!"