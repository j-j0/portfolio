# GitHub Actions CI Workflow for React Portfolio
# This workflow runs on every push and pull request to main branch

name: CI Pipeline

# When to run this workflow
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Environment variables available to all jobs
env:
  NODE_VERSION: '22.3.0'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# Jobs to run (can run in parallel)
jobs:
  # Job 1: Test the application
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Get the code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm ci
    
    # Step 4: Run linting
    - name: Run ESLint
      run: npm run lint --if-present || echo "No lint script found"
    
    # Step 5: Run tests
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true
    
    # Step 6: Upload test coverage (optional)
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Job 2: Build the application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test # Wait for tests to pass
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    # Build the React app
    - name: Build application
      run: npm run build
    
    # Upload build artifacts for other jobs to use
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: build/
        retention-days: 1

  # Job 3: Build and test Docker image
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, build] # Wait for both test and build jobs
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Setup Docker Buildx for advanced features
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # Build Docker image
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false # Don't push, just build and test
        tags: ${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Test the Docker image
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 3000:80 ${{ env.IMAGE_NAME }}:latest
        sleep 10
        curl -f http://localhost:3000 || exit 1
        docker stop test-container
        docker rm test-container

  # Job 4: Security scanning (optional but recommended)
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only on push, not PR
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    # Check for security vulnerabilities
    - name: Run security audit
      run: npm audit --audit-level=high
    
    # Scan for secrets in code
    - name: Run secret scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  # Job 5: Deploy to GitHub Pages (only on main branch)
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, build, docker] # Wait for all checks to pass
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Required for GitHub Pages deployment
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
      env:
        # Set the base path for GitHub Pages if your repo isn't at root
        PUBLIC_URL: /my-website
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job 6: Notify on completion (optional)
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, build, docker, security, deploy]
    if: always() # Run even if other jobs fail
    
    steps:
    - name: Notify success
      if: ${{ needs.test.result == 'success' && needs.build.result == 'success' && needs.docker.result == 'success' }}
      run: |
        echo "✅ All checks passed! Portfolio is ready for deployment."
    
    - name: Notify failure
      if: ${{ needs.test.result == 'failure' || needs.build.result == 'failure' || needs.docker.result == 'failure' }}
      run: |
        echo "❌ Some checks failed. Please review the logs."
        exit 1